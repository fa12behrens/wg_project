-- Enth√§lt Fehler, muss also nochmal durchgearbeitet werden
SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

CREATE SCHEMA IF NOT EXISTS `wgmanager` DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci ;
USE `wgmanager` ;

-- -----------------------------------------------------
-- Table `wgmanager`.`user`
-- -----------------------------------------------------
CREATE  TABLE IF NOT EXISTS `wgmanager`.`user` (
  `id` INT NOT NULL AUTO_INCREMENT ,
  `name` VARCHAR(45) NOT NULL ,
  `password` VARCHAR(45) NOT NULL ,
  `points` INT NULL ,
  PRIMARY KEY (`id`) )
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `wgmanager`.`role`
-- -----------------------------------------------------
CREATE  TABLE IF NOT EXISTS `wgmanager`.`role` (
  `id` INT NOT NULL AUTO_INCREMENT ,
  `name` VARCHAR(45) NOT NULL ,
  PRIMARY KEY (`id`) )
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `wgmanager`.`user_has_role`
-- -----------------------------------------------------
CREATE  TABLE IF NOT EXISTS `wgmanager`.`user_has_role` (
  `user_id` INT NOT NULL ,
  `role_id` INT NOT NULL ,
  PRIMARY KEY (`user_id`) ,
  INDEX `fk_user_has_role_role1_idx` (`role_id` ASC) ,
  INDEX `fk_user_has_role_user1_idx` (`user_id` ASC) ,
  CONSTRAINT `fk_user_has_role_role1`
    FOREIGN KEY (`role_id` )
    REFERENCES `wgmanager`.`role` (`id` )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_user_has_role_user1`
    FOREIGN KEY (`user_id` )
    REFERENCES `wgmanager`.`user` (`id` )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `wgmanager`.`user_has_userlogs`
-- -----------------------------------------------------
CREATE  TABLE IF NOT EXISTS `wgmanager`.`user_has_userlogs` (
  `userlog_id` INT NOT NULL ,
  `user_id` INT NOT NULL ,
  PRIMARY KEY (`userlog_id`) ,
  INDEX `fk_user_has_userlogs_user1_idx` (`user_id` ASC) ,
  CONSTRAINT `fk_user_has_userlogs_user1`
    FOREIGN KEY (`user_id` )
    REFERENCES `wgmanager`.`user` (`id` )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `wgmanager`.`comment`
-- -----------------------------------------------------
CREATE  TABLE IF NOT EXISTS `wgmanager`.`comment` (
  `id` INT NOT NULL AUTO_INCREMENT ,
  `text` VARCHAR(255) NOT NULL ,
  PRIMARY KEY (`id`) )
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `wgmanager`.`user_has_comments`
-- -----------------------------------------------------
CREATE  TABLE IF NOT EXISTS `wgmanager`.`user_has_comments` (
  `comment_id` INT NOT NULL ,
  `user_id` INT NOT NULL ,
  PRIMARY KEY (`comment_id`) ,
  INDEX `fk_user_has_comments_comment1_idx` (`comment_id` ASC) ,
  INDEX `fk_user_has_comments_user1_idx` (`user_id` ASC) ,
  CONSTRAINT `fk_user_has_comments_comment1`
    FOREIGN KEY (`comment_id` )
    REFERENCES `wgmanager`.`comment` (`id` )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_user_has_comments_user1`
    FOREIGN KEY (`user_id` )
    REFERENCES `wgmanager`.`user` (`id` )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `wgmanager`.`group`
-- -----------------------------------------------------
CREATE  TABLE IF NOT EXISTS `wgmanager`.`group` (
  `id` INT NOT NULL AUTO_INCREMENT ,
  `name` VARCHAR(45) NOT NULL ,
  PRIMARY KEY (`id`) )
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `wgmanager`.`group_has_users`
-- -----------------------------------------------------
CREATE  TABLE IF NOT EXISTS `wgmanager`.`group_has_users` (
  `user_id` INT NOT NULL ,
  `group_id` INT NOT NULL ,
  PRIMARY KEY (`user_id`) ,
  INDEX `fk_group_has_users_group1_idx` (`group_id` ASC) ,
  INDEX `fk_group_has_users_user1_idx` (`user_id` ASC) ,
  CONSTRAINT `fk_group_has_users_group1`
    FOREIGN KEY (`group_id` )
    REFERENCES `wgmanager`.`group` (`id` )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_group_has_users_user1`
    FOREIGN KEY (`user_id` )
    REFERENCES `wgmanager`.`user` (`id` )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `wgmanager`.`userlog`
-- -----------------------------------------------------
CREATE  TABLE IF NOT EXISTS `wgmanager`.`userlog` (
  `id` INT NOT NULL ,
  `timestamp` DATETIME NOT NULL ,
  PRIMARY KEY (`id`) ,
  INDEX `fk_userlog_user_has_userlogs1_idx` (`id` ASC) ,
  CONSTRAINT `fk_userlog_user_has_userlogs1`
    FOREIGN KEY (`id` )
    REFERENCES `wgmanager`.`user_has_userlogs` (`userlog_id` )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `wgmanager`.`product`
-- -----------------------------------------------------
CREATE  TABLE IF NOT EXISTS `wgmanager`.`product` (
  `id` INT NOT NULL AUTO_INCREMENT ,
  `name` VARCHAR(45) NOT NULL ,
  `food` INT NOT NULL ,
  PRIMARY KEY (`id`) )
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `wgmanager`.`stock`
-- -----------------------------------------------------
CREATE  TABLE IF NOT EXISTS `wgmanager`.`stock` (
  `id` INT NOT NULL AUTO_INCREMENT ,
  `product_id` INT NOT NULL ,
  `user_id` INT NOT NULL ,
  `for` VARCHAR(45) NULL ,
  `description` VARCHAR(255) NULL ,
  `expired` DATE NULL ,
  PRIMARY KEY (`id`) ,
  INDEX `fk_stock_product_idx` (`product_id` ASC) ,
  INDEX `fk_stock_user1_idx` (`user_id` ASC) ,
  CONSTRAINT `fk_stock_product`
    FOREIGN KEY (`product_id` )
    REFERENCES `wgmanager`.`product` (`id` )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_stock_user1`
    FOREIGN KEY (`user_id` )
    REFERENCES `wgmanager`.`user` (`id` )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `wgmanager`.`budget`
-- -----------------------------------------------------
CREATE  TABLE IF NOT EXISTS `wgmanager`.`budget` (
  `id` INT NOT NULL AUTO_INCREMENT ,
  `user_id` INT NOT NULL ,
  `money` VARCHAR(45) NOT NULL ,
  `costs` VARCHAR(45) NOT NULL ,
  PRIMARY KEY (`id`) ,
  INDEX `fk_budget_user1_idx` (`user_id` ASC) ,
  CONSTRAINT `fk_budget_user1`
    FOREIGN KEY (`user_id` )
    REFERENCES `wgmanager`.`user` (`id` )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `wgmanager`.`calendar`
-- -----------------------------------------------------
CREATE  TABLE IF NOT EXISTS `wgmanager`.`calendar` (
  `id` INT NOT NULL AUTO_INCREMENT ,
  `user_id` INT NOT NULL ,
  `from` DATETIME NULL ,
  `to` DATETIME NOT NULL ,
  `title` VARCHAR(45) NOT NULL ,
  `description` VARCHAR(45) NULL ,
  `Event` INT NOT NULL ,
  `Task` INT NOT NULL ,
  PRIMARY KEY (`id`) ,
  INDEX `fk_calendar_user1_idx` (`user_id` ASC) ,
  CONSTRAINT `fk_calendar_user1`
    FOREIGN KEY (`user_id` )
    REFERENCES `wgmanager`.`user` (`id` )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `wgmanager`.`recipe`
-- -----------------------------------------------------
CREATE  TABLE IF NOT EXISTS `wgmanager`.`recipe` (
  `id` INT NOT NULL AUTO_INCREMENT ,
  `name` VARCHAR(45) NOT NULL ,
  PRIMARY KEY (`id`) )
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `wgmanager`.`stocklog`
-- -----------------------------------------------------
CREATE  TABLE IF NOT EXISTS `wgmanager`.`stocklog` (
  `id` INT NOT NULL AUTO_INCREMENT ,
  `user_id` INT NOT NULL ,
  `timestamp` DATETIME NOT NULL ,
  PRIMARY KEY (`id`) ,
  INDEX `fk_stocklog_user1_idx` (`user_id` ASC) ,
  CONSTRAINT `fk_stocklog_user1`
    FOREIGN KEY (`user_id` )
    REFERENCES `wgmanager`.`user` (`id` )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `wgmanager`.`stock_has_stocklogs`
-- -----------------------------------------------------
CREATE  TABLE IF NOT EXISTS `wgmanager`.`stock_has_stocklogs` (
  `stocklog_id` INT NOT NULL ,
  `stock_id` INT NOT NULL ,
  PRIMARY KEY (`stocklog_id`) ,
  INDEX `fk_stock_has_stocklogs_stock1_idx` (`stock_id` ASC) ,
  INDEX `fk_stock_has_stocklogs_stocklog1_idx` (`stocklog_id` ASC) ,
  CONSTRAINT `fk_stock_has_stocklogs_stock1`
    FOREIGN KEY (`stock_id` )
    REFERENCES `wgmanager`.`stock` (`id` )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_stock_has_stocklogs_stocklog1`
    FOREIGN KEY (`stocklog_id` )
    REFERENCES `wgmanager`.`stocklog` (`id` )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `wgmanager`.`budgetlog`
-- -----------------------------------------------------
CREATE  TABLE IF NOT EXISTS `wgmanager`.`budgetlog` (
  `id` INT NOT NULL ,
  `user_id` INT NOT NULL ,
  `timestamp` DATETIME NOT NULL ,
  PRIMARY KEY (`id`) ,
  INDEX `fk_budgetlog_user1_idx` (`user_id` ASC) ,
  CONSTRAINT `fk_budgetlog_user1`
    FOREIGN KEY (`user_id` )
    REFERENCES `wgmanager`.`user` (`id` )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `wgmanager`.`calendarlog`
-- -----------------------------------------------------
CREATE  TABLE IF NOT EXISTS `wgmanager`.`calendarlog` (
  `id` INT NOT NULL AUTO_INCREMENT ,
  `user_id` INT NOT NULL ,
  `timestamp` DATETIME NOT NULL ,
  PRIMARY KEY (`id`) ,
  INDEX `fk_calendarlog_user1_idx` (`user_id` ASC) ,
  CONSTRAINT `fk_calendarlog_user1`
    FOREIGN KEY (`user_id` )
    REFERENCES `wgmanager`.`user` (`id` )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `wgmanager`.`calendar`
-- -----------------------------------------------------
CREATE  TABLE IF NOT EXISTS `wgmanager`.`calendar` (
  `id` INT NOT NULL AUTO_INCREMENT ,
  `user_id` INT NOT NULL ,
  `from` DATETIME NULL ,
  `to` DATETIME NOT NULL ,
  `title` VARCHAR(45) NOT NULL ,
  `description` VARCHAR(45) NULL ,
  `Event` INT NOT NULL ,
  `Task` INT NOT NULL ,
  PRIMARY KEY (`id`) ,
  INDEX `fk_calendar_user1_idx` (`user_id` ASC) ,
  CONSTRAINT `fk_calendar_user1`
    FOREIGN KEY (`user_id` )
    REFERENCES `wgmanager`.`user` (`id` )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `wgmanager`.`calendar_has_calendarlogs`
-- -----------------------------------------------------
CREATE  TABLE IF NOT EXISTS `wgmanager`.`calendar_has_calendarlogs` (
  `calendar_id` INT NOT NULL ,
  `calendarlog_id` INT NOT NULL ,
  PRIMARY KEY (`calendar_id`, `calendarlog_id`) ,
  INDEX `fk_calendar_has_calendarlogs_calendar1_idx` (`calendar_id` ASC) ,
  INDEX `fk_calendar_has_calendarlogs_calendarlog1_idx` (`calendarlog_id` ASC) ,
  CONSTRAINT `fk_calendar_has_calendarlogs_calendar1`
    FOREIGN KEY (`calendar_id` )
    REFERENCES `wgmanager`.`calendar` (`id` )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_calendar_has_calendarlogs_calendarlog1`
    FOREIGN KEY (`calendarlog_id` )
    REFERENCES `wgmanager`.`calendarlog` (`id` )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `wgmanager`.`calendar_has_users`
-- -----------------------------------------------------
CREATE  TABLE IF NOT EXISTS `wgmanager`.`calendar_has_users` (
  `calendar_id` INT NOT NULL ,
  `user_id` INT NOT NULL ,
  PRIMARY KEY (`calendar_id`, `user_id`) ,
  INDEX `fk_calendar_has_users_calendar1_idx` (`calendar_id` ASC) ,
  INDEX `fk_calendar_has_users_user1_idx` (`user_id` ASC) ,
  CONSTRAINT `fk_calendar_has_users_calendar1`
    FOREIGN KEY (`calendar_id` )
    REFERENCES `wgmanager`.`calendar` (`id` )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_calendar_has_users_user1`
    FOREIGN KEY (`user_id` )
    REFERENCES `wgmanager`.`user` (`id` )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `wgmanager`.`budget_has_budgetlog`
-- -----------------------------------------------------
CREATE  TABLE IF NOT EXISTS `wgmanager`.`budget_has_budgetlog` (
  `budgetlog_id` INT NOT NULL ,
  `budget_id` INT NOT NULL ,
  PRIMARY KEY (`budgetlog_id`) ,
  INDEX `fk_budget_has_budgetlog_budgetlog1_idx` (`budgetlog_id` ASC) ,
  CONSTRAINT `fk_budget_has_budgetlog_budget1`
    FOREIGN KEY (`budget_id` )
    REFERENCES `wgmanager`.`budget` (`id` )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_budget_has_budgetlog_budgetlog1`
    FOREIGN KEY (`budgetlog_id` )
    REFERENCES `wgmanager`.`budgetlog` (`id` )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `wgmanager`.`recipe_consume_product`
-- -----------------------------------------------------
CREATE  TABLE IF NOT EXISTS `wgmanager`.`recipe_consume_product` (
  `recipe_id` INT NOT NULL ,
  `product_id` INT NOT NULL ,
  PRIMARY KEY (`recipe_id`, `product_id`) ,
  INDEX `fk_recipe_consume_product_product1_idx` (`product_id` ASC) ,
  CONSTRAINT `fk_recipe_consume_product_recipe1`
    FOREIGN KEY (`recipe_id` )
    REFERENCES `wgmanager`.`recipe` (`id` )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_recipe_consume_product_product1`
    FOREIGN KEY (`product_id` )
    REFERENCES `wgmanager`.`product` (`id` )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `wgmanager`.`recipelog`
-- -----------------------------------------------------
CREATE  TABLE IF NOT EXISTS `wgmanager`.`recipelog` (
  `id` INT NOT NULL AUTO_INCREMENT ,
  `timestamp` VARCHAR(45) NOT NULL ,
  `user_id` INT NOT NULL ,
  PRIMARY KEY (`id`) ,
  INDEX `fk_recipelog_user1_idx` (`user_id` ASC) ,
  CONSTRAINT `fk_recipelog_user1`
    FOREIGN KEY (`user_id` )
    REFERENCES `wgmanager`.`user` (`id` )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `wgmanager`.`recipe_has_recipelogs`
-- -----------------------------------------------------
CREATE  TABLE IF NOT EXISTS `wgmanager`.`recipe_has_recipelogs` (
  `recipelog_id` INT NOT NULL ,
  `recipe_id` INT NOT NULL ,
  PRIMARY KEY (`recipelog_id`) ,
  INDEX `fk_recipe_has_recipelogs_recipelog1_idx` (`recipelog_id` ASC) ,
  CONSTRAINT `fk_recipe_has_recipelogs_recipe1`
    FOREIGN KEY (`recipe_id` )
    REFERENCES `wgmanager`.`recipe` (`id` )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_recipe_has_recipelogs_recipelog1`
    FOREIGN KEY (`recipelog_id` )
    REFERENCES `wgmanager`.`recipelog` (`id` )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

USE `wgmanager` ;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
